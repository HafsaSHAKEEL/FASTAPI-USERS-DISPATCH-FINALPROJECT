"""Add created_at to dispatches

Revision ID: d16598f356c1
Revises: 
Create Date: 2024-07-23 18:57:50.709696

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd16598f356c1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tokens_id', table_name='tokens')
    op.drop_table('tokens')
    op.drop_index('ix_dispatch_status_history_id', table_name='dispatch_status_history')
    op.drop_table('dispatch_status_history')
    op.drop_index('ix_packages_id', table_name='packages')
    op.drop_table('packages')
    op.drop_index('ix_addresses_id', table_name='addresses')
    op.drop_table('addresses')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    op.drop_table('user_roles')
    op.add_column('dispatches', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('dispatches', 'status',
               existing_type=postgresql.ENUM('PENDING', 'ACCEPTED', 'STARTED', 'COMPLETED', name='dispatchstatus'),
               type_=sa.Enum('PENDING', 'ACCEPTED', 'STARTED', 'COMPLETED', name='dispatchstatusenum'),
               existing_nullable=True)
    op.drop_index('ix_dispatches_description', table_name='dispatches')
    op.create_index(op.f('ix_dispatches_area'), 'dispatches', ['area'], unique=False)
    op.create_index(op.f('ix_dispatches_created_at'), 'dispatches', ['created_at'], unique=False)
    op.drop_column('dispatches', 'start_time')
    op.drop_column('dispatches', 'pod_image')
    op.drop_column('dispatches', 'notes')
    op.drop_column('dispatches', 'description')
    op.drop_column('dispatches', 'complete_time')
    op.drop_column('dispatches', 'recipient_name')
    op.drop_column('dispatches', 'date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dispatches', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('recipient_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('complete_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('pod_image', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('dispatches', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_dispatches_created_at'), table_name='dispatches')
    op.drop_index(op.f('ix_dispatches_area'), table_name='dispatches')
    op.create_index('ix_dispatches_description', 'dispatches', ['description'], unique=False)
    op.alter_column('dispatches', 'status',
               existing_type=sa.Enum('PENDING', 'ACCEPTED', 'STARTED', 'COMPLETED', name='dispatchstatusenum'),
               type_=postgresql.ENUM('PENDING', 'ACCEPTED', 'STARTED', 'COMPLETED', name='dispatchstatus'),
               existing_nullable=True)
    op.drop_column('dispatches', 'created_at')
    op.create_table('user_roles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_roles_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='user_roles_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='addresses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='addresses_pkey')
    )
    op.create_index('ix_addresses_id', 'addresses', ['id'], unique=False)
    op.create_table('packages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dispatch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dimensions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.id'], name='packages_dispatch_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='packages_pkey')
    )
    op.create_index('ix_packages_id', 'packages', ['id'], unique=False)
    op.create_table('dispatch_status_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dispatch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'ACCEPTED', 'STARTED', 'COMPLETED', name='dispatchstatus'), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.id'], name='dispatch_status_history_dispatch_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dispatch_status_history_pkey')
    )
    op.create_index('ix_dispatch_status_history_id', 'dispatch_status_history', ['id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('expiry_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey'),
    sa.UniqueConstraint('token', name='tokens_token_key')
    )
    op.create_index('ix_tokens_id', 'tokens', ['id'], unique=False)
    # ### end Alembic commands ###
